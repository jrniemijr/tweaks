git config --global user.name "Rich Niemi"
git config --global user.email "rich.niemi@gmail.com"
git config --global core.editor vim
git config --global push.default simple

# got these aliases from Tim Pettersen's article on dzone
# show a pretty log output
git config --global alias.grog 'log --graph --abbrev-commit --decorate --all --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)"'
# checks that your local copy of the ref that you’re overwriting
# is up-to-date before overwriting it
git config --global alias.please 'push --force-with-lease'
# quietly tacks any staged files onto the last commit
git config --global alias.commend 'commit --amend --no-edit'
# initializes your repository and creates an empty root commit
# since first commit to repo cannot be rebased
git config --global alias.it '!git init && git commit -m “root” --allow-empty'
# various stash aliases
git config --global alias.stsh 'stash --keep-index'
git config --global alias.staash 'stash --include-untracked'
git config --global alias.staaash 'stash --all'
# shorten status output
# look at changing alias to git st
# once comfortable with output
git config --global alias.shorty 'status --short --branch'
# always create a merge commit
# for no rebasing and not to use fast forward
git config --global alias.merc 'merge --no-ff'

# more git log aliases from Harry Roberts
# https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/
# see what branches recently worked on
git config --global alias.recent 'git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"'
# overview of work
git config --global alias.overview 'git log --all --since='2 weeks' --oneline --no-merges'
# see what I have done
#git config --global alias.recap 'git log --all --oneline --no-merges --author=<your email address>'
